   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata.cst4,"aM",%progbits,4
  17              		.align	2
  18              	.LC1:
  19 0000 00000000 		.word	__stack_chk_guard
  20              		.section	.text.main,"ax",%progbits
  21              		.align	1
  22              		.global	main
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv4-sp-d16
  29              	main:
  30              	.LFB193:
  31              		.file 1 "main.c"
   1:main.c        **** /* Main source file for assignment 2 part A, which implements shitty homebrewn crypto together with
   2:main.c        ****  * a nasty little stack based buffer overflow
   3:main.c        ****  *
   4:main.c        ****  * Copyright 2018 TUM
   5:main.c        ****  * Created: 2018-11-15 Florian Wilde <florian.wilde@tum.de>
   6:main.c        ****  **************************************************************************************************
   7:main.c        **** 
   8:main.c        **** #include "VirtualSerial.h"
   9:main.c        **** #include "packetizer.h"
  10:main.c        **** //#include "crypto.h"
  11:main.c        **** #include "randombytes_salsa20XMC_random.h"
  12:main.c        **** #include "sodium.h"
  13:main.c        **** 
  14:main.c        **** //BOARD ID: 00A7 -> NONCE =
  15:main.c        **** int main(void) {
  32              		.loc 1 15 16 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 56
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 20
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 91B0     		sub	sp, sp, #68
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 88
  47              		.loc 1 15 16 is_stmt 0 view .LVU1
  48 0004 284B     		ldr	r3, .L12
  49 0006 1B68     		ldr	r3, [r3]
  50 0008 0F93     		str	r3, [sp, #60]
  51 000a 4FF00003 		mov	r3,#0
  16:main.c        ****   uint8_t ID[16]= {0xc1, 0x80, 0x9, 0x9, 0xb, 0xa0, 0x1b, 0x92, 0x82, 0x6, 0x0, 0x10, 0xa, 0x0, 0x0
  52              		.loc 1 16 3 is_stmt 1 view .LVU2
  17:main.c        ****   uint8_t key[32] = {0xc1, 0x80, 0x9, 0x9, 0xb, 0xa0, 0x1b, 0x92, 0x82, 0x6, 0x0, 0x10, 0xa, 0x0, 0
  53              		.loc 1 17 3 view .LVU3
  54              		.loc 1 17 11 is_stmt 0 view .LVU4
  55 000e 07AC     		add	r4, sp, #28
  56 0010 264D     		ldr	r5, .L12+4
  57 0012 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  58 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  59 0016 95E80F00 		ldm	r5, {r0, r1, r2, r3}
  60 001a 84E80F00 		stm	r4, {r0, r1, r2, r3}
  18:main.c        ****   pt_s plaintext = { 0 };
  61              		.loc 1 18 3 is_stmt 1 view .LVU5
  62              		.loc 1 18 8 is_stmt 0 view .LVU6
  63 001e 0023     		movs	r3, #0
  64 0020 0493     		str	r3, [sp, #16]
  65 0022 0593     		str	r3, [sp, #20]
  66 0024 0693     		str	r3, [sp, #24]
  19:main.c        ****   ct_s ciphertext = { 0 };
  67              		.loc 1 19 3 is_stmt 1 view .LVU7
  68              		.loc 1 19 8 is_stmt 0 view .LVU8
  69 0026 0293     		str	r3, [sp, #8]
  70 0028 0393     		str	r3, [sp, #12]
  20:main.c        **** 
  21:main.c        ****   USB_Init();
  71              		.loc 1 21 3 is_stmt 1 view .LVU9
  72 002a FFF7FEFF 		bl	USB_Init
  73              	.LVL0:
  22:main.c        **** 
  23:main.c        ****   randombytes_set_implementation(&randombytes_salsa20XMC_implementation);
  74              		.loc 1 23 3 view .LVU10
  75 002e 2048     		ldr	r0, .L12+8
  76 0030 FFF7FEFF 		bl	randombytes_set_implementation
  77              	.LVL1:
  24:main.c        ****   sodium_init();
  78              		.loc 1 24 3 view .LVU11
  79 0034 FFF7FEFF 		bl	sodium_init
  80              	.LVL2:
  25:main.c        **** 
  26:main.c        **** 
  27:main.c        ****   while(1) {
  28:main.c        ****     /* Consumes incoming data and parses it until we received a valid packet.
  29:main.c        ****        If so, it will fill the plaintextJob struct with the appropriate information. */
  30:main.c        ****     if(packetizerReceive(&plaintext) == 0) {
  31:main.c        ****       /* If the sender did not sent a nonce, generate one */
  32:main.c        ****       if(plaintext.nonce == NULL) {
  33:main.c        ****         plaintext.nonce = malloc(CRYPTO_NONCE_BYTES);
  81              		.loc 1 33 27 is_stmt 0 view .LVU12
  82 0038 1827     		movs	r7, #24
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  35:main.c        ****           plaintext.nonce[i] = rand() & UINT8_MAX;
  36:main.c        ****         }
  37:main.c        ****       }
  38:main.c        ****       /* Now encrypt the plaintext */
  39:main.c        ****       ciphertext.text = (uint8_t*)malloc((crypto_secretbox_MACBYTES+plaintext.textLen)*sizeof(uint8
  40:main.c        ****       ciphertext.textLen = (crypto_secretbox_MACBYTES+plaintext.textLen);
  41:main.c        ****       if(crypto_secretbox_easy(ciphertext.text, plaintext.text, plaintext.textLen, plaintext.nonce,
  83              		.loc 1 41 10 view .LVU13
  84 003a 0025     		movs	r5, #0
  85 003c 14E0     		b	.L2
  86              	.L11:
  33:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  87              		.loc 1 33 9 is_stmt 1 view .LVU14
  33:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  88              		.loc 1 33 27 is_stmt 0 view .LVU15
  89 003e 3846     		mov	r0, r7
  90 0040 FFF7FEFF 		bl	malloc
  91              	.LVL3:
  33:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  92              		.loc 1 33 25 view .LVU16
  93 0044 0690     		str	r0, [sp, #24]
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  94              		.loc 1 34 9 is_stmt 1 view .LVU17
  95              	.LBB2:
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  96              		.loc 1 34 13 view .LVU18
  97              	.LVL4:
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  98              		.loc 1 34 27 view .LVU19
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
  99              		.loc 1 34 20 is_stmt 0 view .LVU20
 100 0046 0024     		movs	r4, #0
 101              	.LVL5:
 102              	.L4:
  35:main.c        ****         }
 103              		.loc 1 35 11 is_stmt 1 discriminator 3 view .LVU21
  35:main.c        ****         }
 104              		.loc 1 35 32 is_stmt 0 discriminator 3 view .LVU22
 105 0048 FFF7FEFF 		bl	rand
 106              	.LVL6:
  35:main.c        ****         }
 107              		.loc 1 35 30 discriminator 3 view .LVU23
 108 004c 069B     		ldr	r3, [sp, #24]
 109 004e 1855     		strb	r0, [r3, r4]
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
 110              		.loc 1 34 51 is_stmt 1 discriminator 3 view .LVU24
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
 111              		.loc 1 34 52 is_stmt 0 discriminator 3 view .LVU25
 112 0050 0134     		adds	r4, r4, #1
 113              	.LVL7:
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
 114              		.loc 1 34 27 is_stmt 1 discriminator 3 view .LVU26
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
 115              		.loc 1 34 9 is_stmt 0 discriminator 3 view .LVU27
 116 0052 182C     		cmp	r4, #24
 117 0054 F8D1     		bne	.L4
 118 0056 0FE0     		b	.L3
 119              	.LVL8:
 120              	.L5:
  34:main.c        ****         for(size_t i = 0; i < CRYPTO_NONCE_BYTES; i++) {
 121              		.loc 1 34 9 discriminator 3 view .LVU28
 122              	.LBE2:
  42:main.c        ****                  key) == 0) {
  43:main.c        ****         //ciphertext.textLen = getCiphertextLength(plaintext.textLen);
  44:main.c        ****         /* Finally, if encryption was successful, send ciphertext back in a packet */
  45:main.c        ****         packetizerSend(&ciphertext);
  46:main.c        ****       }
  47:main.c        ****       /* Free all buffers that were allocated in the meantime */
  48:main.c        ****       free(plaintext.text);
 123              		.loc 1 48 7 is_stmt 1 view .LVU29
 124 0058 0498     		ldr	r0, [sp, #16]
 125 005a FFF7FEFF 		bl	free
 126              	.LVL9:
  49:main.c        ****       plaintext.text = NULL;
 127              		.loc 1 49 7 view .LVU30
 128              		.loc 1 49 22 is_stmt 0 view .LVU31
 129 005e 0495     		str	r5, [sp, #16]
  50:main.c        ****       free(ciphertext.text);
 130              		.loc 1 50 7 is_stmt 1 view .LVU32
 131 0060 0298     		ldr	r0, [sp, #8]
 132 0062 FFF7FEFF 		bl	free
 133              	.LVL10:
  51:main.c        ****       ciphertext.text = NULL;
 134              		.loc 1 51 7 view .LVU33
 135              		.loc 1 51 23 is_stmt 0 view .LVU34
 136 0066 0295     		str	r5, [sp, #8]
 137              	.L2:
  27:main.c        ****     /* Consumes incoming data and parses it until we received a valid packet.
 138              		.loc 1 27 3 is_stmt 1 view .LVU35
  30:main.c        ****       /* If the sender did not sent a nonce, generate one */
 139              		.loc 1 30 5 view .LVU36
  30:main.c        ****       /* If the sender did not sent a nonce, generate one */
 140              		.loc 1 30 8 is_stmt 0 view .LVU37
 141 0068 04A8     		add	r0, sp, #16
 142 006a FFF7FEFF 		bl	packetizerReceive
 143              	.LVL11:
  30:main.c        ****       /* If the sender did not sent a nonce, generate one */
 144              		.loc 1 30 7 view .LVU38
 145 006e 0028     		cmp	r0, #0
 146 0070 FAD1     		bne	.L2
  32:main.c        ****         plaintext.nonce = malloc(CRYPTO_NONCE_BYTES);
 147              		.loc 1 32 7 is_stmt 1 view .LVU39
  32:main.c        ****         plaintext.nonce = malloc(CRYPTO_NONCE_BYTES);
 148              		.loc 1 32 9 is_stmt 0 view .LVU40
 149 0072 069B     		ldr	r3, [sp, #24]
 150 0074 002B     		cmp	r3, #0
 151 0076 E2D0     		beq	.L11
 152              	.L3:
  39:main.c        ****       ciphertext.textLen = (crypto_secretbox_MACBYTES+plaintext.textLen);
 153              		.loc 1 39 7 is_stmt 1 view .LVU41
  39:main.c        ****       ciphertext.textLen = (crypto_secretbox_MACBYTES+plaintext.textLen);
 154              		.loc 1 39 78 is_stmt 0 view .LVU42
 155 0078 059C     		ldr	r4, [sp, #20]
  39:main.c        ****       ciphertext.textLen = (crypto_secretbox_MACBYTES+plaintext.textLen);
 156              		.loc 1 39 35 view .LVU43
 157 007a 04F11006 		add	r6, r4, #16
 158 007e 3046     		mov	r0, r6
 159 0080 FFF7FEFF 		bl	malloc
 160              	.LVL12:
  39:main.c        ****       ciphertext.textLen = (crypto_secretbox_MACBYTES+plaintext.textLen);
 161              		.loc 1 39 23 view .LVU44
 162 0084 0290     		str	r0, [sp, #8]
  40:main.c        ****       if(crypto_secretbox_easy(ciphertext.text, plaintext.text, plaintext.textLen, plaintext.nonce,
 163              		.loc 1 40 7 is_stmt 1 view .LVU45
  40:main.c        ****       if(crypto_secretbox_easy(ciphertext.text, plaintext.text, plaintext.textLen, plaintext.nonce,
 164              		.loc 1 40 26 is_stmt 0 view .LVU46
 165 0086 0396     		str	r6, [sp, #12]
  41:main.c        ****                  key) == 0) {
 166              		.loc 1 41 7 is_stmt 1 view .LVU47
  41:main.c        ****                  key) == 0) {
 167              		.loc 1 41 10 is_stmt 0 view .LVU48
 168 0088 07AB     		add	r3, sp, #28
 169 008a 0193     		str	r3, [sp, #4]
 170 008c 069B     		ldr	r3, [sp, #24]
 171 008e 0093     		str	r3, [sp]
 172 0090 2246     		mov	r2, r4
 173 0092 2B46     		mov	r3, r5
 174 0094 0499     		ldr	r1, [sp, #16]
 175 0096 FFF7FEFF 		bl	crypto_secretbox_easy
 176              	.LVL13:
  41:main.c        ****                  key) == 0) {
 177              		.loc 1 41 9 view .LVU49
 178 009a 0028     		cmp	r0, #0
 179 009c DCD1     		bne	.L5
  45:main.c        ****       }
 180              		.loc 1 45 9 is_stmt 1 view .LVU50
 181 009e 02A8     		add	r0, sp, #8
 182 00a0 FFF7FEFF 		bl	packetizerSend
 183              	.LVL14:
 184 00a4 D8E7     		b	.L5
 185              	.L13:
 186 00a6 00BF     		.align	2
 187              	.L12:
 188 00a8 00000000 		.word	.LC1
 189 00ac 00000000 		.word	.LANCHOR0
 190 00b0 00000000 		.word	randombytes_salsa20XMC_implementation
 191              		.cfi_endproc
 192              	.LFE193:
 194              		.section	.rodata
 195              		.align	2
 196              		.set	.LANCHOR0,. + 0
 197              	.LC0:
 198 0000 C1800909 		.ascii	"\301\200\011\011\013\240\033\222\202\006\000\020\012"
 198      0BA01B92 
 198      82060010 
 198      0A
 199 000d 000000C1 		.ascii	"\000\000\000\301\200\011\011\013\240\033\222\202\006"
 199      8009090B 
 199      A01B9282 
 199      06
 200 001a 00100A00 		.ascii	"\000\020\012\000\000\000"
 200      0000
 201              		.text
 202              	.Letext0:
 203              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 204              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 205              		.file 4 "/usr/include/newlib/sys/_types.h"
 206              		.file 5 "/usr/include/newlib/sys/reent.h"
 207              		.file 6 "/usr/include/newlib/sys/lock.h"
 208              		.file 7 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/core_cm4.h"
 209              		.file 8 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Infineon/XMC4500_series/Include/system_X
 210              		.file 9 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Infineon/XMC4500_series/Include/XMC4500.
 211              		.file 10 "/usr/include/newlib/stdlib.h"
 212              		.file 11 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_usbd_regs.h"
 213              		.file 12 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_usbd.h"
 214              		.file 13 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Core/XMC4000/U
 215              		.file 14 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Core/XMC4000/.
 216              		.file 15 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Core/XMC4000/.
 217              		.file 16 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Core/XMC4000/.
 218              		.file 17 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Core/USBTask.h
 219              		.file 18 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Class/Device/.
 220              		.file 19 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Class/Device/C
 221              		.file 20 "VirtualSerial.h"
 222              		.file 21 "packetizer.h"
 223              		.file 22 "sodium-1.0.15/include/sodium/randombytes.h"
 224              		.file 23 "randombytes_salsa20XMC_random.h"
 225              		.file 24 "sodium-1.0.15/include/sodium/randombytes_salsa20_random.h"
 226              		.file 25 "sodium-1.0.15/include/sodium/randombytes_sysrandom.h"
 227              		.file 26 "sodium-1.0.15/include/sodium/core.h"
 228              		.file 27 "sodium-1.0.15/include/sodium/crypto_secretbox.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccJhEqjt.s:17     .rodata.cst4:0000000000000000 $d
     /tmp/ccJhEqjt.s:21     .text.main:0000000000000000 $t
     /tmp/ccJhEqjt.s:29     .text.main:0000000000000000 main
     /tmp/ccJhEqjt.s:188    .text.main:00000000000000a8 $d
     /tmp/ccJhEqjt.s:195    .rodata:0000000000000000 $d
                           .group:0000000000000000 wm4.0.2b1621af4d156004b207f1d62b99413e
                           .group:0000000000000000 wm4.USB.h.376.cfdb9ecb25c70fec676f585dede264a7
                           .group:0000000000000000 wm4.Common.h.60.c2f00e237f5994003db83c2422602b22
                           .group:0000000000000000 wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.newlib.h.21.1ae2897bc09bbe4bc80ffb801fb02432
                           .group:0000000000000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:0000000000000000 wm4.features.h.22.026edb2397769f4ae13f35900dbdb560
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.c0958401bd0ce484d507ee19aacab817
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.2bf373aedffd8b393ccd11dc057e8547
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.BoardTypes.h.52.ca64813ccee737bcc2115eab5e075fdb
                           .group:0000000000000000 wm4.CompilerSpecific.h.55.4a5e5ff77cd35e49c89cf2115251aee0
                           .group:0000000000000000 wm4.Attributes.h.56.73b3ee26b0836c2dec569a5fa6f1b355
                           .group:0000000000000000 wm4.xmc_device.h.61.ba2d082e12f51240746cffdd60d42b81
                           .group:0000000000000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:0000000000000000 wm4.core_cm4.h.32.6c6eb1c8daeca23ce7ba79c8e8120d52
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.91b63349961c35637933e4fba51b867b
                           .group:0000000000000000 wm4.core_cm4.h.172.fdd5a388a160bb6ff767b7d7ee212268
                           .group:0000000000000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:0000000000000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:0000000000000000 wm4.xmc_device.h.1460.8860499b404961ffcfbb8d1fefcb2146
                           .group:0000000000000000 wm4.xmc_common.h.92.3f4336a80569affab05a81145b87c2fc
                           .group:0000000000000000 wm4.Endianness.h.57.3ac00c5468f4b91b806a0e6dba047e9c
                           .group:0000000000000000 wm4.Common.h.105.4b937a9cc9dcdb26c3f07541b0b763a8
                           .group:0000000000000000 wm4.USBController.h.49.cbfc73805155b6fff6267400af3f4eec
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:0000000000000000 wm4.xmc_usbd_regs.h.80.57c6c85fa0ecbc9f8327ce445aebb9bc
                           .group:0000000000000000 wm4.xmc4_scu.h.83.0449f5880ac071460ec1a8072311ea51
                           .group:0000000000000000 wm4.xmc_usbd.h.122.ce57a9e6a9da48ee33ece02813c49593
                           .group:0000000000000000 wm4.USBController_XMC4000.h.71.902f2653e09cb8b25245faa82cc6b907
                           .group:0000000000000000 wm4.StdDescriptors.h.73.7d17e8be7a73b855fc0f8827303b7597
                           .group:0000000000000000 wm4.Endpoint.h.73.3734de3e84ab23fb43d81f41fba620ec
                           .group:0000000000000000 wm4.Device_XMC4000.h.86.6803bdd99d84e764a570256c87a24d0a
                           .group:0000000000000000 wm4.StdRequestType.h.50.461dce94a3ee1fa9ff31ec5f28bd9699
                           .group:0000000000000000 wm4.ConfigDescriptors.h.51.0d67ebf453774188abf5a503ba8f6735
                           .group:0000000000000000 wm4.CDCClass.h.61.0d41ba255f7ce6f076fd610d8396dd1f
                           .group:0000000000000000 wm4.CDCClassCommon.h.72.14ca578d8547e19a8a0c0d2d328483bd
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.HIDClass.h.62.6bb32c59177b21a83b8e65c5a1b0a615
                           .group:0000000000000000 wm4.HIDReportData.h.47.f13f4956396e0bec70835fe634fcc24d
                           .group:0000000000000000 wm4.HIDParser.h.88.4b86fe94cb8d01713592cdd0391b606b
                           .group:0000000000000000 wm4.HIDClassCommon.h.71.a60cdf9d7cd69289f43dde215b509193
                           .group:0000000000000000 wm4.MassStorageClass.h.61.e9235f3bd090b77f36343f082ef93107
                           .group:0000000000000000 wm4.MassStorageClassCommon.h.51.6aefecf288eb3c3c6c9bde61e26dd765
                           .group:0000000000000000 wm4.Descriptors.h.44.84a4fd312957d0d42fb6aaa001850ba4
                           .group:0000000000000000 wm4.crypto.h.8.3c7e0671468cbc28e07567ab2d290f6b
                           .group:0000000000000000 wm4.base64url.h.26.ed1fee22e760dd991443f292d5830091
                           .group:0000000000000000 wm4.packetizer.h.44.8cfee869db25400923a603e5cc82ed56
                           .group:0000000000000000 wm4.export.h.3.069642e50a739d7e8bd572e0f5b91055
                           .group:0000000000000000 wm4.randombytes.h.28.d92c4e5a57bf52557a9782c27b663a62
                           .group:0000000000000000 wm4.randombytes_salsa20XMC_random.h.30.c255d9afffd6579bce6c1fffc9331283
                           .group:0000000000000000 wm4.version.h.3.4a24f5078e732201fe64ecedc79d1740
                           .group:0000000000000000 wm4.crypto_aead_aes256gcm.h.37.f06c3a2a9916b28d25ce521d8b6d30e4
                           .group:0000000000000000 wm4.crypto_aead_chacha20poly1305.h.16.67f32ece6ebd6cc049f0715e6b0e69ad
                           .group:0000000000000000 wm4.crypto_aead_xchacha20poly1305.h.14.207cc4aaabdc929ff2099eb0d69ab920
                           .group:0000000000000000 wm4.crypto_auth_hmacsha512.h.15.eff7eeeca3f76c97d40891c6c26e8d71
                           .group:0000000000000000 wm4.crypto_auth_hmacsha512256.h.15.b6821f43a6086964daa3251b570bc8c2
                           .group:0000000000000000 wm4.crypto_auth.h.16.9400a02c736a8b1e08e491366cd27257
                           .group:0000000000000000 wm4.crypto_auth_hmacsha256.h.15.0077d2e439598abd38aec2ace6d6cdd5
                           .group:0000000000000000 wm4.crypto_stream_xsalsa20.h.23.33c3ee5c33e5737b167c543228736927
                           .group:0000000000000000 wm4.crypto_box_curve25519xsalsa20poly1305.h.15.47fdbfcdf23b14f859f1ab73a31d81d2
                           .group:0000000000000000 wm4.crypto_box.h.23.36db1a3020b3ecbf502815296470a53b
                           .group:0000000000000000 wm4.crypto_core_hsalsa20.h.11.6f5bd4777af7294e0d853efc87225dec
                           .group:0000000000000000 wm4.crypto_core_hchacha20.h.11.2c628b8667ba9d0d71939f1e8d47caaa
                           .group:0000000000000000 wm4.crypto_core_salsa20.h.11.7ce30578633b77708df2486e23cf2d41
                           .group:0000000000000000 wm4.crypto_core_salsa2012.h.11.c0d7428a1384f8b0cbb03fb392196513
                           .group:0000000000000000 wm4.crypto_core_salsa208.h.11.2c518617446b00e93a2e8c0c6a2cb17d
                           .group:0000000000000000 wm4.crypto_generichash_blake2b.h.38.4b6d675038c455959c90c43a75693d35
                           .group:0000000000000000 wm4.crypto_generichash.h.16.771391b6badc9219de7753c54a91592a
                           .group:0000000000000000 wm4.crypto_hash.h.23.c22d9cbc719debf3450c41dc1cb030f6
                           .group:0000000000000000 wm4.crypto_kdf_blake2b.h.17.2fdb3afa142f0f4e2d520a0f2ed3aac9
                           .group:0000000000000000 wm4.crypto_kdf.h.17.5c8c60d3d3b88115f88aea210415241a
                           .group:0000000000000000 wm4.crypto_kx.h.15.b446ee9d39f22111a7b84c74adc80539
                           .group:0000000000000000 wm4.crypto_onetimeauth_poly1305.h.2.97bcf3b0ea5506ed126bc3828081b2c6
                           .group:0000000000000000 wm4.crypto_onetimeauth.h.21.dab310d1ac5639131792e5f80761f399
                           .group:0000000000000000 wm4.limits.h.25.cf8422693d16b226d0307cb8be7d4408
                           .group:0000000000000000 wm4.crypto_pwhash_argon2i.h.17.7efc8566fd80d0aa25a92905ba299d17
                           .group:0000000000000000 wm4.crypto_pwhash_argon2id.h.17.3776a3d43da07ec2a2ce4f641491ac5c
                           .group:0000000000000000 wm4.crypto_pwhash.h.17.e54c9eb9913f339a6ab67545d97d3cb6
                           .group:0000000000000000 wm4.crypto_scalarmult_curve25519.h.12.a04608b0d5b783eeaeea57e826f42071
                           .group:0000000000000000 wm4.crypto_scalarmult.h.13.4b20e331e974ed3d97708f65e3d09ff7
                           .group:0000000000000000 wm4.crypto_secretbox_xsalsa20poly1305.h.15.c9d857dc1ea465bb2950509a5d6827a2
                           .group:0000000000000000 wm4.crypto_secretbox.h.16.74468d3816cf4274cae7e8825a2ac49f
                           .group:0000000000000000 wm4.crypto_stream_chacha20.h.23.7f39f7dfc92696b60601f2c683245511
                           .group:0000000000000000 wm4.crypto_secretstream_xchacha20poly1305.h.17.979cddb9e5bdd495ebbc5568661cf9c5
                           .group:0000000000000000 wm4.crypto_shorthash_siphash24.h.16.818ac93010098b15c9530c60724e71cf
                           .group:0000000000000000 wm4.crypto_shorthash.h.16.cf5f829a6555012edb52b2ee5653a691
                           .group:0000000000000000 wm4.crypto_sign_ed25519.h.22.07782bf1d908046d9a70e5cf10af901c
                           .group:0000000000000000 wm4.crypto_sign.h.28.a3247a8a761034c27bfcc3699825dc31
                           .group:0000000000000000 wm4.crypto_stream.h.24.5deb85fa59e80e8dc0f5f7ac9213cae8
                           .group:0000000000000000 wm4.crypto_stream_salsa20.h.23.fc01df25aec77276d8dd631cf7c6b2db
                           .group:0000000000000000 wm4.utils.h.17.31ca9da2b3c3d17cb1ce98c0f528b530
                           .group:0000000000000000 wm4.crypto_stream_xchacha20.h.23.1c98e48d07b332b3e5362ddf35d6f170
                           .group:0000000000000000 wm4.crypto_box_curve25519xchacha20poly1305.h.16.c730b274b2e8e0087c78faa13784b0ca
                           .group:0000000000000000 wm4.crypto_secretbox_xchacha20poly1305.h.15.79de7bec24244041b03221fe64a1405a
                           .group:0000000000000000 wm4.crypto_pwhash_scryptsalsa208sha256.h.17.3af592158e8339e18e48fc8487319250
                           .group:0000000000000000 wm4.crypto_stream_salsa2012.h.22.08bdb7be901746f92b3b3e7fcdc77e17
                           .group:0000000000000000 wm4.crypto_stream_salsa208.h.22.9a5ceb273178e4c72d667eeaa8da7b04

UNDEFINED SYMBOLS
__stack_chk_guard
USB_Init
randombytes_set_implementation
sodium_init
malloc
rand
free
packetizerReceive
crypto_secretbox_easy
packetizerSend
randombytes_salsa20XMC_implementation
